{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tatsuya/Desktop/user-management-tatuya/fe/src/components/Forms/AddEditForm.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      fullname: '',\n      email: '',\n      phone: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitFormAdd = e => {\n      e.preventDefault();\n      fetch('http://localhost:3000/crud', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fullname: this.state.fullname,\n          email: this.state.email,\n          phone: this.state.phone\n        })\n      }).then(response => response.json()).then(item => {\n        if (Array.isArray(item)) {\n          this.props.addItemToState(item[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.submitFormEdit = e => {\n      e.preventDefault();\n      fetch('http://localhost:3000/crud', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          fullname: this.state.fullname,\n          email: this.state.email,\n          phone: this.state.phone\n        })\n      }).then(response => response.json()).then(item => {\n        if (Array.isArray(item)) {\n          this.props.updateState(item[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.item) {\n      const {\n        id,\n        fullname,\n        email,\n        phone\n      } = this.props.item;\n      this.setState({\n        id,\n        fullname,\n        email,\n        phone\n      });\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.props.item ? this.submitFormEdit : this.submitFormAdd,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"fullname\",\n          children: \"\\u6C0F\\u540D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"fullname\",\n          id: \"fullname\",\n          onChange: this.onChange,\n          value: this.state.fullname === null ? '' : this.state.fullname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          onChange: this.onChange,\n          value: this.state.email === null ? '' : this.state.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"phone\",\n          children: \"\\u96FB\\u8A71\\u756A\\u53F7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"phone\",\n          id: \"phone\",\n          onChange: this.onChange,\n          value: this.state.phone === null ? '' : this.state.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u78BA\\u5B9A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddEditForm;","map":{"version":3,"sources":["/Users/tatsuya/Desktop/user-management-tatuya/fe/src/components/Forms/AddEditForm.js"],"names":["React","Button","Form","FormGroup","Label","Input","AddEditForm","Component","state","id","fullname","email","phone","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","item","Array","isArray","props","addItemToState","toggle","console","log","catch","err","submitFormEdit","updateState","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n    state = {\n        id: 0,\n        fullname: '',\n        email: '',\n        phone: ''\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    submitFormAdd = e => {\n        e.preventDefault();\n        fetch('http://localhost:3000/crud', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                fullname: this.state.fullname,\n                email: this.state.email,\n                phone: this.state.phone\n            })\n        })\n            .then(response => response.json())\n            .then(item => {\n                if (Array.isArray(item)) {\n                    this.props.addItemToState(item[0]);\n                    this.props.toggle();\n                } else {\n                    console.log('failure');\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    submitFormEdit = e => {\n        e.preventDefault();\n        fetch('http://localhost:3000/crud', {\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: this.state.id,\n                fullname: this.state.fullname,\n                email: this.state.email,\n                phone: this.state.phone\n            })\n        })\n            .then(response => response.json())\n            .then(item => {\n                if (Array.isArray(item)) {\n                    this.props.updateState(item[0]);\n                    this.props.toggle();\n                } else {\n                    console.log('failure');\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    componentDidMount() {\n        if (this.props.item) {\n            const { id, fullname, email, phone } = this.props.item;\n            this.setState({ id, fullname, email, phone });\n        };\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\n                <FormGroup>\n                    <Label for=\"fullname\">氏名</Label>\n                    <Input type=\"text\" name=\"fullname\" id=\"fullname\" onChange={this.onChange} value={this.state.fullname === null ? '' : this.state.fullname} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"phone\">電話番号</Label>\n                    <Input type=\"text\" name=\"phone\" id=\"phone\" onChange={this.onChange} value={this.state.phone === null ? '' : this.state.phone} />\n                </FormGroup>\n                <Button>確定</Button>\n            </Form>\n        );\n    }\n}\n\nexport default AddEditForm;"]},"metadata":{},"sourceType":"module"}